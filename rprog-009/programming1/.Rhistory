install.packages("KernSmooth")
library(KernSmooth)
install.packages('swirl')
library(swirl)
swirl()
swirl()
swirl
library(swirl)
swirl()
5+7
x<-5_7
x<-5+7
x
y<-x-3
y
z=c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
a<-c(z,555,z)
c(z,555,z)
z*2+100
my_sqrt=sqrt(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(c(1,2,3,4),c(0,10))
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),10)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
c(0,5,55,-10,6)
num_vect<-c(0,5,55,-10,6)
num_vect<-c(0.5,55,-10,6)
tf<-(num_vect<1)
tf<- num_vect<1
tf
num_vect>=6
my_char<-c('My','name','is')
my_char
paste(my_char,collapse = " ")
my_name<-c(my_char,'wujohn1990')
my_name
paste(my_name,collapse = " ")
pastr("Hello","world!",sep=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c("x",'y','z'),sep="")
paste(1:3,c("x","y","z"),sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
setwd("~/GitRepo/coursera_courses/getdata-009/quiz1")
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv '
,destfile = 'q1data.csv', method='curl')
install.packages("RCurl")
libarry(Rcurl)
library(Rcurl)
library(RCurl)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv '
,destfile = 'q1data.csv', method='curl')
,destfile = 'q1data.csv')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv '
,destfile = 'q1data.csv')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv '
,destfile = 'q1data.csv',method='auto')
install.packages("RCurl")
install.packages("RCurl")
library(RCurl)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv '
,destfile = 'q1data.csv',method='auto')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv '
,destfile = 'q1data.csv',method='curl')
getwd()
list.files()
q1data<-read.csv('q1data.csv')
head(q1data)
sum(q1data$VAL>1e6)
sum(q1data$VAL>1e6,na.rm=T)
1e6
q1data$VAL>1e6
head(q1data$VAL)
sum(q1data$VAL==24)
sum(q1data$VAL==24,na.rm=T)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx'
,destfile = 'q2data.csv',method='curl')
install.packages("xlsx")
install.packages("XML")
install.packages("xlsx")
install.packages("xlsx")
install.packages("rJava")
install.packages("rJava")
install.packages("xlsx")
library(xlsx)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx'
,destfile = 'q2data.xlsx',method='curl')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx'
,destfile = 'q3data.xlsx',method='curl')
dat<-read.xlsx('q3data.xlsx',sheetIndex = 1,rowIndex = 18:23,colIndex = 7:15)
head(dat)
sum(dat$Zip*dat$Ext,na.rm=T)
library(xml)
library(XML)
install.packages("XML")
install.packages("XML")
library(XML)
install.packages("XML")
library(XML)
fileUrl<-'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml'
q4data<-xmlTreeParse(fileUrl,useInternalNodes = T)
q4data<-xmlTreeParse(fileUrl)
fileUrl<-'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml'
q4data<-xmlTreeParse(fileUrl)
q4data<-xmlTreeParse(fileUrl,method='curl')
fileUrl<-url('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml')
q4data<-xmlTreeParse(fileUrl,useInternalNodes = T)
q4data<-xmlTreeParse(fileUrl,useInternalNodes = T,isURL = T)
q4data<-xmlTreeParse(fileUrl,useInternal=T,isURL = T)
q4data<-xmlTreeParse(fileUrl,isURL = T)
fileUrl<-'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml'
q4data<-xmlTreeParse(fileUrl,isURL = T)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
q4data<-xmlTreeParse(fileUrl,isURL = T)
q4data<-xmlTreeParse(fileUrl)
q4data<-xmlTreeParse(fileUrl,isURL = T)
q4data<-xmlTreeParse(fileUrl,isURL = T,useInternalNodes = T)
library(RCurl)
q4ata <- getURL(fileUrl)
head(q4d)
head(q4ata)
q4data <- getURL(fileUrl)
q4data<-xmlTreeParse(q4data,useInternalNodes = T)
rootNode<-xmlRoot(q4data)
xmlName(rootNode)
xpathSApply(rootNode,"//name",xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)
zipcode<-xpathSApply(rootNode,"//zipcode",xmlValue)
sum(zipcode==21231)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv'
,destfile = 'q5data.csv',method='curl')
getwd()
install.packages("data.table")
DT<-fread('q5data.csv',sep=',')
library(data.table)
DT<-fread('q5data.csv',sep=',')
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
system.time(DT[,mean(pwgtp15),by=SEX])
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
mean(DT$pwgtp15,by=DT$SEX)
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
DT[,mean(pwgtp15),by=SEX]
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
data<-NULL
for (f in id){
file<-paste(dirctory,f,'.csv',sep='')
data<-rbind(data,read.csv(file,header=T))
}
return(mean(data[,pollutant],na.rm=T))
}
setwd("~/GitRepo/coursera_courses/rprog-009/programming1")
pollutantmean('./specdata/','nitrate',1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
data<-NULL
for (f in id){
file<-paste(directory,f,'.csv',sep='')
data<-rbind(data,read.csv(file,header=T))
}
return(mean(data[,pollutant],na.rm=T))
}
pollutantmean('./specdata/','nitrate',1:10)
formatC(1, width=3, flag="0")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
data<-NULL
for (f in id){
file<-paste(directory, formatC(f, width=3, flag="0"),'.csv',sep='')
data<-rbind(data,read.csv(file,header=T))
}
return(mean(data[,pollutant],na.rm=T))
}
pollutantmean('./specdata/','nitrate',1:10)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("./specdata", "nitrate", 23)
pollutantmean("./specdata/", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
data<-NULL
for (f in id){
file<-paste(directory,'/' formatC(f, width=3, flag="0"),'.csv',sep='')
data<-rbind(data,read.csv(file,header=T))
}
return(mean(data[,pollutant],na.rm=T))
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
data<-NULL
for (f in id){
file<-paste(directory,'/', formatC(f, width=3, flag="0"),'.csv',sep='')
data<-rbind(data,read.csv(file,header=T))
}
return(mean(data[,pollutant],na.rm=T))
}
pollutantmean("./specdata/", "nitrate", 23)
pollutantmean("./specdata", "nitrate", 23)
data<-numeric()
data
nobs<-numeric()
f=1
directory='./specdata/'
file<-paste(directory,'/', formatC(f, width=3, flag="0"),'.csv',sep='')
data<-read.csv(file,header=T)
head(data)
nobs<-complete.cases(data[,c('sulfate','nitrate')])
nobs
nobs<-sum(complete.cases(data[,c('sulfate','nitrate')]))
nobs
result<-data.frame(id=id,nobs=nobs)
is=1
result<-data.frame(id=id,nobs=nobs)
id=1
result<-data.frame(id=id,nobs=nobs)
result
complete("./specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
nobs<-numeric()
for (f in id){
file<-paste(directory,'/', formatC(f, width=3, flag="0"),'.csv',sep='')
data<-read.csv(file,header=T)
nobs<-c(nobs,sum(complete.cases(data[,c('sulfate','nitrate')])))
}
result<-data.frame(id=id,nobs=nobs)
return(result)
}
complete("./specdata", c(2, 4, 8, 10, 12))
complete("./specdata", 3)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
nobs<-numeric()
for (f in id){
file<-paste('./',directory,'/', formatC(f, width=3, flag="0"),'.csv',sep='')
data<-read.csv(file,header=T)
nobs<-c(nobs,sum(complete.cases(data[,c('sulfate','nitrate')])))
}
result<-data.frame(id=id,nobs=nobs)
return(result)
}
complete("./specdata", 3)
complete("specdata", 3)
nobs
x=numeric()
x
x=c(x,2)
x
list.file(directory)
list.file('.')
list.files('.')
list.files('./specdata/')
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
result<-numeric()
for (f in list.files(directory)){
file<-paste('./',directory,'/', f,sep='')
data<-read.csv(file,header=T)
nobs<-sum(complete.cases(data[,c('sulfate','nitrate')]))
if(nobs>threshold){
result<-c(result,cor(data[,c('sulfate','nitrate')],use='na.or.complete'))
}
}
return(result)
}
corr('specdata',150)
cor(data[,c('sulfate','nitrate')],use='na.or.complete')
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
result<-numeric()
for (f in list.files(directory)){
file<-paste('./',directory,'/', f,sep='')
data<-read.csv(file,header=T)
nobs<-sum(complete.cases(data[,c('sulfate','nitrate')]))
if(nobs>threshold){
result<-c(result,cor(data$sulfate,data$nitrate,use='na.or.complete'))
}
}
return(result)
}
x=corr('specdata',150)
head(x)
summary(x)
cr <- corr("specdata", 5000)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
