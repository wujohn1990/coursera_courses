install.packages("KernSmooth")
library(KernSmooth)
install.packages('swirl')
library(swirl)
swirl()
swirl()
swirl
library(swirl)
swirl()
5+7
x<-5_7
x<-5+7
x
y<-x-3
y
z=c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
a<-c(z,555,z)
c(z,555,z)
z*2+100
my_sqrt=sqrt(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(c(1,2,3,4),c(0,10))
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),10)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
c(0,5,55,-10,6)
num_vect<-c(0,5,55,-10,6)
num_vect<-c(0.5,55,-10,6)
tf<-(num_vect<1)
tf<- num_vect<1
tf
num_vect>=6
my_char<-c('My','name','is')
my_char
paste(my_char,collapse = " ")
my_name<-c(my_char,'wujohn1990')
my_name
paste(my_name,collapse = " ")
pastr("Hello","world!",sep=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c("x",'y','z'),sep="")
paste(1:3,c("x","y","z"),sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
install.packages("data")
library(dataset)
library(datasets)
data(iris)
head(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
data(mtcars)
?mtcars
head(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
x=with(mtcars, tapply(mpg, cyl, mean))
x[1]-x[8]
x[1]-x[3]
library(swirl)
swril()
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags,class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags,
| class, character(1))
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
,destfile = 'q1data.xlsx',method='curl')
setwd("~/GitRepo/coursera_courses/getdata-009/quiz3")
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
,destfile = 'q1data.csv',method='curl')
q1data=read.csv('q1data.csv',header=T)
agricultureLogical<- q1data$AGS==10 & q1data$ACR==3
head(which(agricultureLogical))
agricultureLogical<- (q1data$AGS==10 & q1data$ACR==3)
head(which(agricultureLogical))
q1data$AGS==10
q1data$ACR==3
agricultureLogical<- (q1data$AGS==10 && q1data$ACR==3)
head(which(agricultureLogical))
agricultureLogical
agricultureLogical<- (q1data$AGS==10 & q1data$ACR==3)
agricultureLogical
head(q1data)
agricultureLogical<- (q1data$AGS==10 * q1data$ACR==3)
head(which(agricultureLogical))
agricultureLogical<- (q1data$AGS==10) * (q1data$ACR==3)
head(which(agricultureLogical))
agricultureLogical<- (q1data$AGS==10) & (q1data$ACR==3)
head(which(agricultureLogical))
(q1data$ACR==3)
table(q1data$AGS)
agricultureLogical<- (q1data$AGS==6) & (q1data$ACR==3)
head(which(agricultureLogical))
install.packages("jpeg")
library(jpeg)
q2data=readJPEG('https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg',native = T)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg'
,destfile = 'q2pic.jpg',method='curl')
q2data=readJPEG('q2pic.jpg',native = T)
head(q2data)
quantile(q2data,probs = c(0.3,0.8))
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
,destfile = 'q3a.csv',method='curl')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv '
,destfile = 'q3a.csv',method='curl')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
,destfile = 'q3a.csv',method='curl')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv '
,destfile = 'q3b.csv',method='curl')
q3a=read.csv('q3a.csv',header=T)
q3b=read.csv('q3b.csv',header=T)
head(q3a)
head(q3b)
q3a=read.csv('q3a.csv',header=F,skip=5)
q3b=read.csv('q3b.csv',header=T)
head(q3a)
names(q3b)
q3data=merge(q3a,q3b,by.x = "V1",by.y = "CountryCode",all = T)
View(`q3data`)
head(q3a)
head(q3b)
tail(q3a)
q3a[237,]
q3a[239,]
q3a[230:300,]
q3a=read.csv('q3a.csv',header=F,skip=5,nrow=237)
head(q3a)
tail(q3a)
q3a=read.csv('q3a.csv',header=F,skip=5,nrow=232)
tail(q3a)
q3a=read.csv('q3a.csv',header=F,skip=5,nrow=231)
complete.cases(q3a$V1,q3b$CountryCode)
q3data=merge(q3a,q3b,by.x = "V1",by.y = "CountryCode",all = T)
complete.cases(q3data$V1,q3data$CountryCode)
head(q3data$V1)
complete.cases(cbind(q3data$V1,q3data$CountryCode))
head(cbind(q3data$V1,q3data$CountryCode))
head(q3data)
intersect(q3a$V1,q3b$CountryCode)
length(intersect(q3a$V1,q3b$CountryCode))
nrow(q3data)
q3data=q3data[order(q3data$V1,decreasing = T),]
q3data[12,]
q3data[13,V1]
q3data[13,'V1']
length(union(q3a$V1,q3b$CountryCode))
union(q3a$V1,q3b$CountryCode)
sort(union(q3a$V1,q3b$CountryCode))
head(q3a)
q3data=q3data[order(q3data$V5,decreasing = T),]
q3data=q3data[order(q3data$V5,decreasing = F),]
q3data[13,'V4']
q3data[1:20,'V4']
q3data=q3data[order(q3data$V5,decreasing = T),]
q3data[1:20,'V4']
q3data=q3data[order(q3data$V2,decreasing = T),]
q3data[1:20,'V4']
q3a=read.csv('q3a.csv',header=F,skip=5,nrow=190)
q3b=read.csv('q3b.csv',header=T)
length(union(q3a$V1,q3b$CountryCode))
union(q3a$V1,q3b$CountryCode)
length(union(q3a$V1,q3b$CountryCode))
q3a=read.csv('q3a.csv',header=F,skip=5,nrow=189)
q3b=read.csv('q3b.csv',header=T)
length(union(q3a$V1,q3b$CountryCode))
length(intersect(q3a$V1,q3b$CountryCode))
q3data=merge(q3a,q3b,by.x = "V1",by.y = "CountryCode",all = T)
dim(q3data)
q3data=q3data[order(q3data$V2,decreasing = T),]
q3data[1:20,'V4']
aggregate(q3data,by=q3data$Income.Group,mean)
aggregate(q3data,by=list(q3data$Income.Group),mean)
aggregate(q3data,by=list(q3data$Income.Group),mean,na.rm=T)
aggregate(q3data$V2,by=list(q3data$Income.Group),mean,na.rm=T)
cut(q3data$V2,g=5)
cut(q3data$V2, breaks=5)
install.packages("Hmisc")
library(Hmisc)
cut(q3data$V2, breaks=5)
cut2(q3data$V2,g = 5)
q3data$group = cut2(q3data$V2,g = 5)
table(q3data$Income.Group,q3data$group)
